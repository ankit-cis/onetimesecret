# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `tryouts` gem.
# Please instead update this file by running `bin/tapioca gem tryouts`.


# source://tryouts//lib/tryouts.rb#4
TRYOUTS_LIB_HOME = T.let(T.unsafe(nil), String)

# source://tryouts//lib/tryouts.rb#7
class Tryouts
  class << self
    # Returns the value of attribute cases.
    #
    # source://tryouts//lib/tryouts.rb#31
    def cases; end

    # source://tryouts//lib/tryouts.rb#107
    def cformat(*args); end

    # Returns the value of attribute container.
    #
    # source://tryouts//lib/tryouts.rb#30
    def container; end

    # Sets the attribute container
    #
    # @param value the value to set the attribute container to.
    #
    # source://tryouts//lib/tryouts.rb#30
    def container=(_arg0); end

    # Returns the value of attribute debug.
    #
    # source://tryouts//lib/tryouts.rb#205
    def debug(*msg); end

    # Sets the attribute debug
    #
    # @param value the value to set the attribute debug to.
    #
    # source://tryouts//lib/tryouts.rb#30
    def debug=(_arg0); end

    # @return [Boolean]
    #
    # source://tryouts//lib/tryouts.rb#39
    def debug?; end

    # source://tryouts//lib/tryouts.rb#199
    def err(*msg); end

    # source://tryouts//lib/tryouts.rb#209
    def eval(str, path, line); end

    # source://tryouts//lib/tryouts.rb#195
    def msg(*msg); end

    # Returns the value of attribute noisy.
    #
    # source://tryouts//lib/tryouts.rb#30
    def noisy; end

    # Sets the attribute noisy
    #
    # @param value the value to set the attribute noisy to.
    #
    # source://tryouts//lib/tryouts.rb#30
    def noisy=(_arg0); end

    # source://tryouts//lib/tryouts.rb#117
    def parse(path); end

    # source://tryouts//lib/tryouts.rb#185
    def print(str); end

    # Returns the value of attribute quiet.
    #
    # source://tryouts//lib/tryouts.rb#30
    def quiet; end

    # Sets the attribute quiet
    #
    # @param value the value to set the attribute quiet to.
    #
    # source://tryouts//lib/tryouts.rb#30
    def quiet=(_arg0); end

    # source://tryouts//lib/tryouts.rb#111
    def run(path); end

    # source://tryouts//lib/tryouts.rb#41
    def run_all(*paths); end

    # source://tryouts//lib/tryouts.rb#33
    def sysinfo; end

    # source://tryouts//lib/tryouts.rb#191
    def vmsg(*msg); end

    private

    # @return [Boolean]
    #
    # source://tryouts//lib/tryouts.rb#225
    def comment?(str); end

    # @return [Boolean]
    #
    # source://tryouts//lib/tryouts.rb#221
    def expectation?(str); end

    # @return [Boolean]
    #
    # source://tryouts//lib/tryouts.rb#233
    def ignore?(str); end

    # @return [Boolean]
    #
    # source://tryouts//lib/tryouts.rb#229
    def test?(str); end

    # @return [Boolean]
    #
    # source://tryouts//lib/tryouts.rb#237
    def test_begin?(str); end
  end
end

# source://tryouts//lib/tryouts.rb#368
module Tryouts::Console
  class << self
    # source://tryouts//lib/tryouts.rb#443
    def att(name, str); end

    # source://tryouts//lib/tryouts.rb#448
    def bgcolor(col, str); end

    # source://tryouts//lib/tryouts.rb#428
    def bright(str); end

    # source://tryouts//lib/tryouts.rb#438
    def color(col, str); end

    # source://tryouts//lib/tryouts.rb#458
    def default_style; end

    # source://tryouts//lib/tryouts.rb#433
    def reverse(str); end

    # source://tryouts//lib/tryouts.rb#454
    def style(*att); end
  end
end

# ANSI escape sequence numbers for text attributes
#
# source://tryouts//lib/tryouts.rb#371
Tryouts::Console::ATTRIBUTES = T.let(T.unsafe(nil), Hash)

# ANSI escape sequence numbers for background colours
#
# source://tryouts//lib/tryouts.rb#397
Tryouts::Console::BGCOLOURS = T.let(T.unsafe(nil), Hash)

# ANSI escape sequence numbers for text colours
#
# source://tryouts//lib/tryouts.rb#383
Tryouts::Console::COLOURS = T.let(T.unsafe(nil), Hash)

# source://tryouts//lib/tryouts.rb#410
module Tryouts::Console::InstanceMethods
  # source://tryouts//lib/tryouts.rb#420
  def att(col); end

  # source://tryouts//lib/tryouts.rb#423
  def bgcolor(col); end

  # source://tryouts//lib/tryouts.rb#411
  def bright; end

  # source://tryouts//lib/tryouts.rb#417
  def color(col); end

  # source://tryouts//lib/tryouts.rb#414
  def reverse; end
end

# source://tryouts//lib/tryouts.rb#348
class Tryouts::Section < ::Array
  # @return [Section] a new instance of Section
  #
  # source://tryouts//lib/tryouts.rb#350
  def initialize(path, start = T.unsafe(nil)); end

  # Returns the value of attribute first.
  #
  # source://tryouts//lib/tryouts.rb#349
  def first; end

  # Sets the attribute first
  #
  # @param value the value to set the attribute first to.
  #
  # source://tryouts//lib/tryouts.rb#349
  def first=(_arg0); end

  # source://tryouts//lib/tryouts.rb#357
  def inspect; end

  # Returns the value of attribute last.
  #
  # source://tryouts//lib/tryouts.rb#349
  def last; end

  # Sets the attribute last
  #
  # @param value the value to set the attribute last to.
  #
  # source://tryouts//lib/tryouts.rb#349
  def last=(_arg0); end

  # Returns the value of attribute path.
  #
  # source://tryouts//lib/tryouts.rb#349
  def path; end

  # Sets the attribute path
  #
  # @param value the value to set the attribute path to.
  #
  # source://tryouts//lib/tryouts.rb#349
  def path=(_arg0); end

  # source://tryouts//lib/tryouts.rb#354
  def range; end

  # source://tryouts//lib/tryouts.rb#362
  def to_s; end
end

# source://tryouts//lib/tryouts.rb#246
class Tryouts::TestBatch < ::Array
  # @return [TestBatch] a new instance of TestBatch
  #
  # source://tryouts//lib/tryouts.rb#255
  def initialize(p, l); end

  # source://tryouts//lib/tryouts.rb#282
  def clean; end

  # Returns the value of attribute failed.
  #
  # source://tryouts//lib/tryouts.rb#253
  def failed; end

  # @return [Boolean]
  #
  # source://tryouts//lib/tryouts.rb#274
  def failed?; end

  # Returns the value of attribute lines.
  #
  # source://tryouts//lib/tryouts.rb#254
  def lines; end

  # Returns the value of attribute path.
  #
  # source://tryouts//lib/tryouts.rb#252
  def path; end

  # source://tryouts//lib/tryouts.rb#260
  def run(before_test, &after_test); end

  # @return [Boolean]
  #
  # source://tryouts//lib/tryouts.rb#289
  def run?; end

  # source://tryouts//lib/tryouts.rb#277
  def setup; end
end

# source://tryouts//lib/tryouts.rb#247
class Tryouts::TestBatch::Container
  # source://tryouts//lib/tryouts.rb#248
  def metaclass; end
end

# source://tryouts//lib/tryouts.rb#293
class Tryouts::TestCase
  # @return [TestCase] a new instance of TestCase
  #
  # source://tryouts//lib/tryouts.rb#295
  def initialize(d, t, e); end

  # Returns the value of attribute desc.
  #
  # source://tryouts//lib/tryouts.rb#294
  def desc; end

  # Returns the value of attribute exps.
  #
  # source://tryouts//lib/tryouts.rb#294
  def exps; end

  # Returns the value of attribute failed.
  #
  # source://tryouts//lib/tryouts.rb#294
  def failed; end

  # @return [Boolean]
  #
  # source://tryouts//lib/tryouts.rb#340
  def failed?; end

  # source://tryouts//lib/tryouts.rb#298
  def inspect; end

  # Returns the value of attribute passed.
  #
  # source://tryouts//lib/tryouts.rb#294
  def passed; end

  # source://tryouts//lib/tryouts.rb#304
  def run; end

  # @return [Boolean]
  #
  # source://tryouts//lib/tryouts.rb#337
  def run?; end

  # Returns the value of attribute skipped.
  #
  # source://tryouts//lib/tryouts.rb#294
  def skipped; end

  # @return [Boolean]
  #
  # source://tryouts//lib/tryouts.rb#334
  def skipped?; end

  # Returns the value of attribute test.
  #
  # source://tryouts//lib/tryouts.rb#294
  def test; end

  # source://tryouts//lib/tryouts.rb#301
  def to_s; end

  private

  # source://tryouts//lib/tryouts.rb#344
  def create_proc(str, path, line); end
end

# source://tryouts//lib/tryouts.rb#8
module Tryouts::VERSION
  def inspect; end

  class << self
    # source://tryouts//lib/tryouts.rb#14
    def load_config; end

    # source://tryouts//lib/tryouts.rb#9
    def to_s; end
  end
end
